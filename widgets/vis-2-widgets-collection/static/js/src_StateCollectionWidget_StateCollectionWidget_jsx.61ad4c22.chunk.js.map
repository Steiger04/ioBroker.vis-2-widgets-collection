{"version":3,"file":"static/js/src_StateCollectionWidget_StateCollectionWidget_jsx.61ad4c22.chunk.js","mappings":"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","sources":["components/CollectionChangeDialog.jsx","StateCollectionWidget/StateCollection.jsx","StateCollectionWidget/StateCollectionWidget.jsx","../node_modules/@mui/icons-material/Close.js"],"sourcesContent":["import CloseIcon from \"@mui/icons-material/Close\";\nimport { Paper, Slider, Stack } from \"@mui/material\";\nimport {\n\tDialog,\n\tDialogContent,\n\tDialogTitle,\n\tDivider,\n\tIconButton,\n\tList,\n\tListItem,\n\tListItemButton,\n\tListItemText,\n} from \"@mui/material\";\nimport React, { useCallback, useContext, useEffect } from \"react\";\nimport useDebounce from \"../hooks/useDebounce\";\nimport { CollectionContext } from \"./CollectionProvider\";\n\nfunction CollectionChangeDialog(props) {\n\tconst { widgetStates, data, open, closeHandler } = props;\n\n\tconst { widget, values, setState, setValue, oidObject, getPropertyValue } =\n\t\tuseContext(CollectionContext);\n\n\tconst oid = oidObject?._id;\n\tconst oidStates = oidObject?.common?.states;\n\tconst oidType = oidObject?.common?.type;\n\n\tconst delay = widget.data.sampleInterval\n\t\t? widget.data.sampleIntervalValue\n\t\t: widget.data.delay;\n\n\tconst {\n\t\tdebouncedValue: debouncedSliderValue,\n\t\tsampledValue: sampledSliderValue,\n\t} = useDebounce(getPropertyValue(\"oid\"), delay);\n\n\tuseEffect(() => {\n\t\tif (!widget.data.sampleInterval && debouncedSliderValue !== undefined) {\n\t\t\tsetValue(oid, debouncedSliderValue);\n\t\t}\n\t}, [debouncedSliderValue, oid, setValue, widget.data.sampleInterval]);\n\n\tuseEffect(() => {\n\t\tif (widget.data.sampleInterval && sampledSliderValue !== undefined) {\n\t\t\tsetValue(oid, sampledSliderValue);\n\t\t}\n\t}, [sampledSliderValue, oid, setValue, widget.data.sampleInterval]);\n\n\t/* useEffect(() => {\n\t\tif (debouncedSliderValue !== undefined) {\n\t\t\tsetValue(oid, debouncedSliderValue);\n\t\t}\n\t}, [debouncedSliderValue, oid, setValue]); */\n\n\tconst changeHandler = useCallback(\n\t\t(value, key = null) => {\n\t\t\tswitch (oidType) {\n\t\t\t\tcase \"number\":\n\t\t\t\t\tif (key === null) {\n\t\t\t\t\t\t// Slider\n\t\t\t\t\t\tsetState({ values: { ...values, [`${oid}.val`]: value } });\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// List\n\t\t\t\t\t\tsetState({ values: { ...values, [`${oid}.val`]: Number(key) } });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"string\":\n\t\t\t\t\t// only List\n\t\t\t\t\tsetState({ values: { ...values, [`${oid}.val`]: String(key) } });\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"boolean\": {\n\t\t\t\t\t// only List\n\t\t\t\t\t// console.log(\"key\", key);\n\n\t\t\t\t\tsetState({\n\t\t\t\t\t\tvalues: {\n\t\t\t\t\t\t\t...values,\n\t\t\t\t\t\t\t[`${oid}.val`]: /^true$/i.test(key),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\t\t[oid, oidType, setState, values],\n\t);\n\n\tconst ChangeSlider =\n\t\toidType === \"number\" &&\n\t\t!widget.data.onlyStates &&\n\t\toidObject?.common?.min !== undefined &&\n\t\toidObject?.common?.max !== undefined ? (\n\t\t\t<Slider\n\t\t\t\tsx={{ pb: oidStates ? 4 : 3 }}\n\t\t\t\tsize=\"small\"\n\t\t\t\tmin={oidObject.common.min}\n\t\t\t\tmax={oidObject.common.max}\n\t\t\t\tmarks={[\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: oidObject.common.min,\n\t\t\t\t\t\tlabel: String(oidObject.common.min),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: oidObject.common.max,\n\t\t\t\t\t\tlabel: String(oidObject.common.max),\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\tvalue={getPropertyValue(\"oid\") || 0}\n\t\t\t\tonChange={(_, value) => changeHandler(value)}\n\t\t\t/>\n\t\t) : null;\n\n\tconst ChangeList = widgetStates ? (\n\t\t<List>\n\t\t\t{Object.entries(widgetStates).map(([key, value]) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ListItem disablePadding key={key}>\n\t\t\t\t\t\t<ListItemButton\n\t\t\t\t\t\t\tdisableGutters\n\t\t\t\t\t\t\tonClick={() => changeHandler(value, key)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\tsx={{ px: 2 }}\n\t\t\t\t\t\t\t\tprimaryTypographyProps={{ variant: \"body2\" }}\n\t\t\t\t\t\t\t\tprimary={value}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ListItemButton>\n\t\t\t\t\t</ListItem>\n\t\t\t\t);\n\t\t\t})}\n\t\t</List>\n\t) : null;\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={open}\n\t\t\tonClose={closeHandler}\n\t\t\tmaxWidth=\"xs\"\n\t\t\tfullWidth\n\t\t\tPaperProps={{\n\t\t\t\tsx: {\n\t\t\t\t\t// bgcolor: data.backgroundColor,\n\t\t\t\t\t// color: data.textColor,\n\t\t\t\t},\n\t\t\t}}\n\t\t>\n\t\t\t<DialogTitle sx={{ m: 0, p: 2 }} id=\"customized-dialog-title\">\n\t\t\t\t{data.header || oidObject.common.name}\n\t\t\t</DialogTitle>\n\t\t\t<IconButton\n\t\t\t\taria-label=\"close\"\n\t\t\t\tonClick={closeHandler}\n\t\t\t\tsx={(theme) => ({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tright: 8,\n\t\t\t\t\ttop: 8,\n\t\t\t\t\tcolor: theme.palette.grey[500],\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<CloseIcon />\n\t\t\t</IconButton>\n\t\t\t<DialogContent\n\t\t\t\tsx={{\n\t\t\t\t\toverflow: \"unset\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Stack\n\t\t\t\t\tdivider={Object.keys(widgetStates).length && <Divider flexItem />}\n\t\t\t\t\tsx={{\n\t\t\t\t\t\tpx: 2,\n\t\t\t\t\t}}\n\t\t\t\t\tspacing={0}\n\t\t\t\t\tcomponent={Paper}\n\t\t\t\t>\n\t\t\t\t\t{ChangeSlider}\n\t\t\t\t\t{ChangeList}\n\t\t\t\t</Stack>\n\t\t\t</DialogContent>\n\t\t</Dialog>\n\t);\n}\n\nexport default CollectionChangeDialog;\n","import { Avatar, Box, Button, Typography } from \"@mui/material\";\nimport React, { useCallback, useState, useContext } from \"react\";\nimport CollectionBase from \"../components/CollectionBase\";\nimport CollectionChangeDialog from \"../components/CollectionChangeDialog\";\nimport { CollectionContext } from \"../components/CollectionProvider\";\nimport useData from \"../hooks/useData\";\nimport useOidValue from \"../hooks/useOidValue\";\nimport useStyles from \"../hooks/useStyles\";\n\nfunction StateCollection() {\n\tconst { setValue, widget, oidObject } = useContext(CollectionContext);\n\tconst { data, widgetStates } = useData(\"oid\");\n\tconst oidValue = useOidValue(\"oid\");\n\n\tconst oidValueUnit =\n\t\t(oidValue || oidValue === 0 || oidValue === false) &&\n\t\t`${oidValue}${widget.data.unit}`;\n\n\tconst [open, setOpen] = useState(false);\n\n\tconst { textStyles, fontStyles } = useStyles(widget.style);\n\n\tconst oid = oidObject?._id;\n\tconst oidType = oidObject?.common?.type;\n\tconst onlyStates = widget.data.onlyStates;\n\n\tconst clickHandler = useCallback(() => {\n\t\tswitch (oidType) {\n\t\t\tcase \"boolean\": {\n\t\t\t\tif (onlyStates) {\n\t\t\t\t\tsetOpen(true);\n\t\t\t\t} else {\n\t\t\t\t\tsetValue(oid, !oidValue);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase \"number\":\n\t\t\tcase \"string\":\n\t\t\t\tsetOpen(true);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}, [oidType, oid, oidValue, setValue, onlyStates]);\n\n\tconst StateButton = (\n\t\t<Button\n\t\t\tdisabled={widget.data.noButton}\n\t\t\tonClick={clickHandler}\n\t\t\tsx={{\n\t\t\t\toverflow: \"hidden\",\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100%\",\n\n\t\t\t\tcolor:\n\t\t\t\t\tdata.iconColorActive ||\n\t\t\t\t\tdata.iconColor ||\n\t\t\t\t\tdata.textColorActive ||\n\t\t\t\t\tdata.textColor,\n\t\t\t\t\"&:hover\": {\n\t\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\t\tfilter:\n\t\t\t\t\t\t(data.iconHoverActive && `brightness(${data.iconHoverActive})`) ||\n\t\t\t\t\t\t(data.iconHover && `brightness(${data.iconHover})`),\n\t\t\t\t},\n\t\t\t}}\n\t\t>\n\t\t\t<Avatar\n\t\t\t\tvariant=\"square\"\n\t\t\t\tsrc={data.iconActive || data.icon}\n\t\t\t\tslotProps={{\n\t\t\t\t\timg: { style: { objectFit: \"contain\" } },\n\t\t\t\t}}\n\t\t\t\tsx={{\n\t\t\t\t\toverflow: \"hidden\",\n\n\t\t\t\t\twidth: `calc(100% * ${data.iconSizeOnly || 100} / 100)`,\n\t\t\t\t\theight: `calc(100% * ${data.iconSizeOnly || 100} / 100)`,\n\n\t\t\t\t\tbottom: data.iconYOffset,\n\t\t\t\t\tleft: data.iconXOffset,\n\n\t\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\t\tcolor: data.iconColorActive || data.iconColor,\n\t\t\t\t\tfilter:\n\t\t\t\t\t\t(data.iconActive || data.icon) &&\n\t\t\t\t\t\t(data.iconColorActive || data.iconColor) &&\n\t\t\t\t\t\t\"drop-shadow(0px 10000px 0)\",\n\t\t\t\t\ttransform:\n\t\t\t\t\t\t(data.iconActive || data.icon) &&\n\t\t\t\t\t\t(data.iconColorActive || data.iconColor) &&\n\t\t\t\t\t\t\"translateY(-10000px)\",\n\t\t\t\t\tdisplay: data.icon ? null : \"flex\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Typography\n\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\tsx={{\n\t\t\t\t\t\t...fontStyles,\n\t\t\t\t\t\t...textStyles,\n\t\t\t\t\t\tfontSize: data.valueSizeActive || data.valueSize,\n\t\t\t\t\t\tbgcolor: \"transparent\",\n\t\t\t\t\t\tcolor: data.textColorActive || data.textColor,\n\t\t\t\t\t\ttextTransform: \"none\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{(!data.iconActive || !data.icon) &&\n\t\t\t\t\t\t(data.alias || data.value || oidValueUnit)}\n\t\t\t\t</Typography>\n\t\t\t</Avatar>\n\t\t</Button>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{open && (\n\t\t\t\t<CollectionChangeDialog\n\t\t\t\t\tdata={data}\n\t\t\t\t\twidgetStates={widgetStates}\n\t\t\t\t\topen={open}\n\t\t\t\t\tcloseHandler={() => setOpen(false)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<CollectionBase data={data} oidValue={oidValue}>\n\t\t\t\t<Box\n\t\t\t\t\tsx={{\n\t\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\theight: \"100%\",\n\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{StateButton}\n\t\t\t\t</Box>\n\t\t\t</CollectionBase>\n\t\t</>\n\t);\n}\n\nexport default StateCollection;\n","import React from \"react\";\nimport Generic from \"../Generic\";\nimport CollectionGroupAttributes from \"../components/CollectionGroupAttributes\";\nimport CollectionGroupCommonAttributes from \"../components/CollectionGroupCommonAttributes\";\nimport withCollectionProvider from \"../components/withCollectionProvider\";\nimport StateCollection from \"./StateCollection\";\n\nclass StateCollectionWidget extends Generic {\n\tstatic getWidgetInfo() {\n\t\treturn {\n\t\t\tid: \"tplStateCollectionWidget\",\n\t\t\tvisSet: \"vis-2-widgets-collection\", // Widget set name in which this widget is located\n\t\t\tvisSetLabel: \"widgets_collection\", // Widget set translated label (should be defined only in one widget of a set)\n\t\t\tvisSetColor: \"#0C0A43\", // Color of a widget set. it is enough to set color only in one widget of a set\n\t\t\tvisName: \"StateCollectionWidget\", // Name of widget\n\t\t\tvisWidgetLabel: \"state_collection_widget\", // Label for widget\n\t\t\tvisAttrs: [\n\t\t\t\tCollectionGroupCommonAttributes(),\n\t\t\t\t{\n\t\t\t\t\tname: \"button\", // group name\n\t\t\t\t\tlabel: \"group_button\",\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"onlyStates\",\n\t\t\t\t\t\t\ttype: \"checkbox\",\n\t\t\t\t\t\t\tlabel: \"only_states\",\n\t\t\t\t\t\t\tdefault: false,\n\t\t\t\t\t\t\thidden: \"!data.values_count\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"noButton\",\n\t\t\t\t\t\t\ttype: \"checkbox\",\n\t\t\t\t\t\t\tlabel: \"no_button\",\n\t\t\t\t\t\t\tdisabled: \"!data.write\",\n\t\t\t\t\t\t\tdefault: \"!data.write\",\n\t\t\t\t\t\t\thidden: \"!data.write\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"noIcon\",\n\t\t\t\t\t\t\ttype: \"checkbox\",\n\t\t\t\t\t\t\tlabel: \"no_icon\",\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t// CollectionGroupAttributes(\"on\"),\n\t\t\t\t// CollectionGroupAttributes(\"off\"),\n\t\t\t\tCollectionGroupAttributes(\"values\"),\n\t\t\t\t// check here all possible types https://github.com/ioBroker/ioBroker.vis/blob/react/src/src/Attributes/Widget/SCHEMA.md\n\t\t\t],\n\t\t\tvisDefaultStyle: {\n\t\t\t\twidth: \"100%\",\n\t\t\t\theight: \"100px\",\n\t\t\t\tposition: \"relative\",\n\t\t\t},\n\t\t\tvisPrev: \"widgets/vis-2-widgets-collection/img/prev-collection-state.png\",\n\t\t};\n\t}\n\n\t// Do not delete this method. It is used by vis to read the widget configuration.\n\t// eslint-disable-next-line class-methods-use-this\n\tgetWidgetInfo() {\n\t\treturn StateCollectionWidget.getWidgetInfo();\n\t}\n\n\t// eslint-disable-next-line class-methods-use-this\n\tasync propertiesUpdate() {\n\t\t// The widget has 3 important states\n\t\t// 1. this.state.values - contains all state values, that are used in widget (automatically collected from widget info).\n\t\t//                        So you can use `this.state.values[this.state.rxData.oid + '.val']` to get the value of state with id this.state.rxData.oid\n\t\t// 2. this.state.rxData - contains all widget data with replaced bindings. E.g. if this.state.data.type is `{system.adapter.admin.0.alive}`,\n\t\t//                        then this.state.rxData.type will have state value of `system.adapter.admin.0.alive`\n\t\t// 3. this.state.rxStyle - contains all widget styles with replaced bindings. E.g. if this.state.styles.width is `{javascript.0.width}px`,\n\t\t//                        then this.state.rxData.type will have state value of `javascript.0.width` + 'px\n\n\t\t// console.log(\"inside propertiesUpdate\", this.state.values);\n\n\t\tconst actualRxData = JSON.stringify(this.state.rxData);\n\t\tif (this.lastRxData === actualRxData) {\n\t\t\treturn;\n\t\t}\n\t\tthis.lastRxData = actualRxData;\n\n\t\tawait this.createStateObjectAsync(\"oid\");\n\t}\n\n\t// This function is called every time when rxData is changed\n\tasync onRxDataChanged(payload) {\n\t\tawait this.propertiesUpdate();\n\t}\n\n\t// This function is called every time when rxStyle is changed\n\t// eslint-disable-next-line class-methods-use-this\n\tonRxStyleChanged() {}\n\n\t// This function is called every time when some Object State updated, but all changes lands into this.state.values too\n\t// eslint-disable-next-line class-methods-use-this, no-unused-vars\n\tonStateUpdated(id, state) {}\n\n\tasync componentDidMount() {\n\t\tsuper.componentDidMount();\n\t\t// Update data\n\t\tawait this.propertiesUpdate();\n\t}\n\n\trenderWidgetBody(props) {\n\t\tsuper.renderWidgetBody(props);\n\n\t\tconst collectionContext = {\n\t\t\tid: props.id,\n\t\t\trefService: props.refService,\n\t\t\tstyle: props.style,\n\t\t\twidget: { ...props.widget, data: this.state.rxData },\n\t\t\tsetValue: this.setValue,\n\t\t\tsetState: this.setState.bind(this),\n\t\t\toidObject: this.state.oidObject,\n\t\t\tvalues: this.state.values,\n\t\t\tisSignalVisible: this.isSignalVisible.bind(this),\n\t\t\tgetPropertyValue: this.getPropertyValue.bind(this),\n\t\t\tmode: this.props.context.themeType,\n\t\t\tsocket: this.props.context.socket,\n\t\t\ttheme: this.props.context.theme,\n\n\t\t\twrappedContent: this.wrappedContent,\n\t\t};\n\n\t\tif (props.widget.data.noCard || props.widget.usedInWidget) {\n\t\t\tthis.wrappedContent = false;\n\t\t} else {\n\t\t\tthis.wrappedContent = true;\n\t\t}\n\n\t\treturn withCollectionProvider(\n\t\t\tthis.wrapContent(<StateCollection />),\n\t\t\tcollectionContext,\n\t\t);\n\t}\n}\n\nexport default StateCollectionWidget;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');"],"names":["props","_oidObject$common","_oidObject$common2","_oidObject$common3","_oidObject$common4","widgetStates","data","open","closeHandler","widget","values","setState","setValue","oidObject","getPropertyValue","useContext","CollectionContext","oid","_id","oidStates","common","states","oidType","type","delay","sampleInterval","sampleIntervalValue","debouncedValue","debouncedSliderValue","sampledValue","sampledSliderValue","useDebounce","useEffect","undefined","changeHandler","useCallback","value","key","arguments","length","_objectSpread","concat","Number","String","test","ChangeSlider","onlyStates","min","max","_jsx","Slider","sx","pb","size","marks","label","valueLabelDisplay","onChange","_","ChangeList","List","children","Object","entries","map","_ref","ListItem","disablePadding","ListItemButton","disableGutters","onClick","ListItemText","px","primaryTypographyProps","variant","primary","_jsxs","Dialog","onClose","maxWidth","fullWidth","PaperProps","DialogTitle","m","p","id","header","name","IconButton","theme","position","right","top","color","palette","grey","CloseIcon","DialogContent","overflow","Stack","divider","keys","Divider","flexItem","spacing","component","Paper","useData","oidValue","useOidValue","oidValueUnit","unit","setOpen","useState","textStyles","fontStyles","useStyles","style","clickHandler","StateButton","Button","disabled","noButton","width","height","iconColorActive","iconColor","textColorActive","textColor","bgcolor","filter","iconHoverActive","iconHover","Avatar","src","iconActive","icon","slotProps","img","objectFit","iconSizeOnly","bottom","iconYOffset","left","iconXOffset","transform","display","Typography","fontSize","valueSizeActive","valueSize","textTransform","alias","_Fragment","CollectionChangeDialog","CollectionBase","Box","justifyContent","alignItems","StateCollectionWidget","Generic","getWidgetInfo","visSet","visSetLabel","visSetColor","visName","visWidgetLabel","visAttrs","CollectionGroupCommonAttributes","fields","default","hidden","CollectionGroupAttributes","visDefaultStyle","visPrev","propertiesUpdate","actualRxData","JSON","stringify","this","state","rxData","lastRxData","createStateObjectAsync","onRxDataChanged","payload","onRxStyleChanged","onStateUpdated","componentDidMount","super","renderWidgetBody","collectionContext","refService","bind","isSignalVisible","mode","context","themeType","socket","wrappedContent","noCard","usedInWidget","withCollectionProvider","wrapContent","StateCollection","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","jsx","d"],"sourceRoot":""}